# 多阶段构建 Dockerfile - 解决架构不匹配问题
# 阶段1: 构建阶段
FROM node:18 AS builder

WORKDIR /app

# 安装构建依赖
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    libvips-dev \
    && rm -rf /var/lib/apt/lists/*

# 设置环境变量强制重新编译
ENV NODE_ENV=development
ENV npm_config_build_from_source=true
ENV npm_config_target_platform=linux
ENV npm_config_target_arch=x64

# 复制 package 文件
COPY package*.json ./

# 清理并重新安装
RUN npm cache clean --force
RUN rm -rf node_modules package-lock.json || true
RUN npm install --verbose

# 强制重新编译原生模块
RUN npm rebuild

# 复制源代码
COPY . .

# 构建应用
RUN NODE_OPTIONS="--max-old-space-size=3072" npm run build

# 阶段2: 生产阶段
FROM node:18-slim AS production

WORKDIR /app

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    libvips-dev \
    && rm -rf /var/lib/apt/lists/*

# 设置生产环境变量
ENV NODE_ENV=production
ENV NODE_OPTIONS=--max-old-space-size=2048

# 从构建阶段复制文件
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/build ./build
COPY --from=builder /app/public ./public
COPY --from=builder /app/config ./config
COPY --from=builder /app/database ./database
COPY --from=builder /app/src ./src

# 暴露端口
EXPOSE 1337

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:1337/admin || exit 1

# 启动命令
CMD ["npm", "start"] 